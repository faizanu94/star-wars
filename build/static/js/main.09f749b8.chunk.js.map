{"version":3,"sources":["components/launcher/index.js","components/alert/index.js","components/filters/movie-filter/index.js","components/filters/index.js","components/loader/index.js","redux/preference/types.js","redux/preference/actions.js","components/movie-list/list-item/index.js","components/movie-list/index.js","components/top-nav/index.js","redux/starwars/types.js","containers/feed/index.js","redux/starwars/actions.js","redux/preference/reducer.js","redux/starwars/reducer.js","redux/rootReducer.js","store.js","app.js","index.js"],"names":["Launcher","className","src","alt","Alert","props","children","MovieFilter","state","filterText","selectedIndex","showDropdown","onKeyDown","e","isEnterKey","keyCode","isUpKey","isDownKey","filteredMovies","getFilteredMovies","preventDefault","setState","prevState","length","selectMovie","selectedMovie","characters","filter","character","starwars","fetchCharacters","then","updateGender","updateSort","updateMovie","hideDropdown","filterMovies","target","value","toggleDropdown","this","movies","movie","movieText","title","toLowerCase","selectedText","indexOf","map","counter","href","onMouseDown","release_date","type","placeholder","onBlur","onChange","renderMovies","disabled","processing","onClick","getMovieDropdown","Component","connect","store","Filters","Fragment","Loader","UPDATE_MOVIE","UPDATE_GENDER","UPDATE_SORT","gender","dispatch","payload","sort","ListItem","columns","name","selector","row","sortable","height","selectGender","createTheme","text","primary","context","background","divider","default","preference","sum","isNaN","reduce","Number","url","rel","producer","opening_crawl","getGenderDropdown","data","defaultSortField","theme","customStyles","headCells","style","fontSize","genders","Set","renderMovie","mapDispatchToProps","MovieList","episode_id","TopNav","PROCESS_FETCH_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILED","PROCESS_FETCH_CHARACTERS","FETCH_CHARACTERS_SUCCESS","FETCH_CHARACTERS_FAILED","FeedContainer","fetchMovies","error","message","renderErrors","renderAlerts","ajax","getJSON","subscribe","response","results","Promise","resolve","reject","o","key","forkJoin","initialState","combineReducers","action","persistedReducers","persistReducer","storage","rootReducer","createStore","applyMiddleware","thunk","persist","persistStore","App","loading","persistor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f749b8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Launcher = () => (\n    <div className=\"launcher-body\">\n        <div className=\"logo-container\">\n            <img className=\"img-fluid\" src=\"/img/logo.png\" alt=\"logo\" />\n            <div className=\"logo-text\">\n                <h4>Loading ..</h4>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Launcher;\n","import React from 'react';\n\nconst Alert = (props) => <div className=\"alert alert-danger\">{props.children}</div>;\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './styles.css';\n\nclass MovieFilter extends Component {\n    state = {\n        filterText: '',\n        selectedIndex: 0,\n        showDropdown: false\n    };\n\n    getFilteredMovies() {\n        return this.state.filterText\n            ? this.props.movies.filter((movie) => {\n                  const movieText = movie.title.toLowerCase();\n                  const selectedText = this.state.filterText.toLowerCase();\n                  return movieText.indexOf(selectedText) >= 0;\n              })\n            : [...this.props.movies];\n    }\n\n    renderMovies() {\n        const movies = this.getFilteredMovies();\n\n        return movies.map((movie, counter) => {\n            return (\n                <a href=\"#/\" onMouseDown={() => this.selectMovie(counter)} key={counter}>\n                    <span className=\"select-menu-item-text p-2\">\n                        {movie.title} ({movie.release_date})\n                    </span>\n                </a>\n            );\n        });\n    }\n\n    onKeyDown = (e) => {\n        const { selectedIndex } = this.state;\n        const isEnterKey = e.keyCode === 13;\n        const isUpKey = e.keyCode === 38;\n        const isDownKey = e.keyCode === 40;\n\n        if (!isUpKey && !isDownKey && !isEnterKey) {\n            return;\n        }\n\n        const filteredMovies = this.getFilteredMovies();\n        e.preventDefault();\n\n        if (isUpKey && selectedIndex > 0) {\n            this.setState((prevState) => ({\n                selectedIndex: prevState.selectedIndex - 1\n            }));\n        } else if (isDownKey && selectedIndex < filteredMovies.length - 1) {\n            this.setState((prevState) => ({\n                selectedIndex: prevState.selectedIndex + 1\n            }));\n        } else if (isEnterKey && filteredMovies[selectedIndex]) {\n            this.selectMovie(selectedIndex);\n        }\n    };\n\n    selectMovie = (selectedIndex) => {\n        const filteredMovies = this.getFilteredMovies();\n        const selectedMovie = filteredMovies[selectedIndex];\n        if (!selectedMovie) {\n            return;\n        }\n\n        this.setState({\n            filterText: '',\n            showDropdown: false\n        });\n\n        const characters = selectedMovie.characters.filter((character) => !this.props.starwars.characters[character]);\n\n        if (characters.length > 0) {\n            this.props.fetchCharacters(characters).then(() => {\n                this.props.updateGender('');\n                this.props.updateSort({});\n                this.props.updateMovie(selectedMovie);\n            });\n        } else {\n            this.props.updateGender('');\n            this.props.updateSort({});\n            this.props.updateMovie(selectedMovie);\n        }\n    };\n\n    hideDropdown = () => {\n        this.setState({\n            showDropdown: false,\n            filterText: ''\n        });\n    };\n\n    filterMovies = (e) => {\n        this.setState({\n            filterText: e.target.value,\n            selectedIndex: 0\n        });\n    };\n\n    getMovieDropdown() {\n        return (\n            <div className=\"movie-select text-warning mt-2\">\n                <h4 className=\"text-warning text-center\">Search Movie</h4>\n                <div className=\"select-menu-filters\">\n                    <div className=\"select-menu-text-filter\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Filter Movies\"\n                            onBlur={this.hideDropdown}\n                            onChange={this.filterMovies}\n                            onKeyDown={this.onKeyDown}\n                        />\n                    </div>\n                </div>\n                <div className=\"select-menu-list\">{this.renderMovies()}</div>\n            </div>\n        );\n    }\n\n    toggleDropdown = () => {\n        this.setState((prevState) => ({\n            showDropdown: !prevState.showDropdown\n        }));\n    };\n\n    render() {\n        return (\n            <div className=\"movie-filter-wrap\">\n                <button disabled={this.props.starwars.processing} onClick={this.toggleDropdown} className=\"btn btn-warning\">\n                    <i className=\"fa fa-filter m-1\"></i>\n                    {this.props.selectedMovie?.title || 'Movie'}\n                </button>\n                {this.state.showDropdown && this.getMovieDropdown()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        starwars: store.starwars\n    };\n};\n\nexport default connect(mapStateToProps)(MovieFilter);\n","import React, { Component } from 'react';\nimport MovieFilter from './movie-filter';\n\nclass Filters extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <MovieFilter\n                    movies={this.props.movies}\n                    selectedMovie={this.props.selectedMovie}\n                    updateMovie={this.props.updateMovie}\n                    updateGender={this.props.updateGender}\n                    updateSort={this.props.updateSort}\n                    fetchCharacters={this.props.fetchCharacters}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Filters;\n","import React from 'react';\nimport './styles.css';\n\nconst Loader = () => (\n    <div className=\"loading-indicator\">\n        <img src=\"/img/spinner.jpg\" alt=\"spinner\" />\n    </div>\n);\n\nexport default Loader;\n","export const UPDATE_MOVIE = 'UPDATE_MOVIE';\nexport const UPDATE_GENDER = 'UPDATE_GENDER';\nexport const UPDATE_SORT = 'UPDATE_SORT';\n","import { UPDATE_GENDER, UPDATE_MOVIE, UPDATE_SORT } from './types';\n\nexport const updateMovie = (movie) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_MOVIE,\n            payload: movie\n        });\n    };\n};\n\nexport const updateGender = (gender) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_GENDER,\n            payload: gender\n        });\n    };\n};\n\nexport const updateSort = (sort) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_SORT,\n            payload: sort\n        });\n    };\n};\n","import 'animate.css/animate.min.css';\nimport React, { Component } from 'react';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { connect } from 'react-redux';\nimport { updateGender, updateSort } from '../../../redux/preference/actions';\nimport './styles.css';\n\nclass ListItem extends Component {\n    state = {\n        showDropdown: false,\n        columns: [\n            {\n                name: 'Name',\n                selector: (row) => row.name,\n                sortable: true\n            },\n            {\n                name: 'Gender',\n                selector: (row) => row.gender,\n                sortable: true\n            },\n            {\n                name: 'Height',\n                selector: (row) => row.height,\n                sortable: true\n            }\n        ]\n    };\n\n    componentWillMount() {\n        createTheme('solarized', {\n            text: {\n                primary: '#ffc107'\n            },\n            context: {\n                background: '#cb4b16',\n                text: '#FFFFFF'\n            },\n            divider: {\n                default: '#000'\n            }\n        });\n    }\n\n    renderMovie() {\n        let characters = this.props.movie.characters.map((character) => this.props.characters[character]);\n        if (this.props.preference.gender && this.props.preference.gender !== 'All Genders') {\n            characters = characters.filter((character) => character?.gender === this.props.preference.gender);\n        }\n        const sum = characters\n            .filter((character) => !isNaN(character?.height))\n            .reduce((sum, character) => sum + Number(character?.height), 0);\n        return (\n            <div className=\"col-12 list-item-container\">\n                <div className=\"list-item-body\">\n                    <div className=\"movie-header\">\n                        <h2>\n                            <a className=\"text-warning\" href={this.props.movie.url} rel=\"noopener noreferrer\" target=\"_blank\">\n                                <span className=\"text-warning\">{this.props.movie.title}</span>\n                                {this.props.movie.name}\n                            </a>\n                        </h2>\n                        <p className=\"meta text-dark small\">\n                            Produced by &middot; <b>{this.props.movie.producer}</b>\n                        </p>\n                    </div>\n                    <div className=\"movie-body\">\n                        <p className=\"text-dark\">{this.props.movie.opening_crawl || 'No description given.'}</p>\n                    </div>\n                    <div className=\"gender-filter-wrap\">\n                        <button onClick={this.toggleDropdown} className=\"btn btn-warning\">\n                            <i className=\"fa fa-filter m-1\"></i>\n                            {this.props.preference.gender || 'Gender'}\n                        </button>\n                        {this.state.showDropdown && this.getGenderDropdown()}\n                    </div>\n                    <h4 className=\"text-warning\">Characters</h4>\n                    <DataTable\n                        columns={this.state.columns}\n                        data={characters}\n                        defaultSortField=\"name\"\n                        theme=\"solarized\"\n                        customStyles={{ headCells: { style: { fontSize: '22px' } } }}\n                    />\n                    <table className=\"table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"text-warning\">\n                                    <b>Total number of characters:</b> {characters.length}\n                                </td>\n                                <td className=\"text-warning\">\n                                    <b>Sum of the heights of the characters:</b> {sum} cm ({sum * 0.032808} ft / {sum * 0.3937} in)\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <a\n                    href={this.props.movie.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"author-link d-none d-lg-block d-xl-block d-md-block\"\n                >\n                    <img className=\"author-img\" src=\"/img/logo.png\" alt={this.props.movie.title} />\n                </a>\n            </div>\n        );\n    }\n\n    getGenderDropdown() {\n        const genders = [\n            'All Genders',\n            ...new Set(this.props.movie.characters.map((character) => this.props.characters[character]?.gender))\n        ];\n        return (\n            <div className=\"gender-select text-warning mt-2\">\n                <div className=\"select-menu-list\">\n                    {genders.map((gender, counter) => {\n                        return (\n                            <a href=\"#/\" onMouseDown={() => this.selectGender(gender)} key={counter}>\n                                <span className=\"select-menu-item-text p-2\">{gender}</span>\n                            </a>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n    toggleDropdown = () => {\n        this.setState((prevState) => ({\n            showDropdown: !prevState.showDropdown\n        }));\n    };\n\n    selectGender = (gender) => {\n        this.setState({\n            showDropdown: false\n        });\n        this.props.updateGender(gender);\n    };\n\n    render() {\n        return (\n            <div className={'animate__animated animate__headShake' + (!this.props.movie.title ? ' text-center' : '')}>\n                {this.props.movie.title && this.renderMovie()}\n                {!this.props.movie.title && <img className=\"img-fluid logo\" src=\"/img/logo.png\" alt=\"logo\" />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        preference: store.preference,\n        characters: store.starwars.characters\n    };\n};\n\nconst mapDispatchToProps = {\n    updateGender,\n    updateSort\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListItem from './list-item';\nimport './styles.css';\n\nclass MovieList extends Component {\n    render() {\n        return (\n            <div className=\"movies-list\">\n                <div className=\"row list-container\">\n                    <ListItem movie={this.props.preference.movie} key={this.props.preference.movie.episode_id} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        preference: store.preference\n    };\n};\n\nexport default connect(mapStateToProps)(MovieList);\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass TopNav extends Component {\n    render() {\n        return (\n            <div className=\"top-nav\">\n                <div className=\"container clearfix\">\n                    <a\n                        href=\"https://github.com/faizanu94/starwars\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        className=\"logo clearfix float-left d-flex\"\n                    >\n                        <img className=\"logo-img\" src=\"/img/logo.png\" alt=\"logo\" />\n                        <div className=\"logo-text\">\n                            <h4>Star Wars</h4>\n                            <p className=\"text-dark d-inline-block\">Star Wars movies data fetched from https://swapi.dev/</p>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TopNav;\n","export const PROCESS_FETCH_MOVIES = 'PROCESS_FETCH_MOVIES';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_FAILED = 'FETCH_MOVIES_FAILED';\nexport const PROCESS_FETCH_CHARACTERS = 'PROCESS_FETCH_CHARACTERS';\nexport const FETCH_CHARACTERS_SUCCESS = 'FETCH_CHARACTERS_SUCCESS';\nexport const FETCH_CHARACTERS_FAILED = 'FETCH_CHARACTERS_FAILED';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from '../../components/alert';\nimport Filters from '../../components/filters';\nimport Loader from '../../components/loader';\nimport MovieList from '../../components/movie-list';\nimport TopNav from '../../components/top-nav';\nimport { updateGender, updateMovie, updateSort } from '../../redux/preference/actions';\nimport { fetchCharacters, fetchMovies } from '../../redux/starwars/actions';\nimport './styles.css';\n\nclass FeedContainer extends Component {\n    componentDidMount() {\n        if (this.props.starwars.movies.length === 0) {\n            this.props.fetchMovies();\n        }\n    }\n\n    renderMovie() {\n        return <MovieList movies={this.props.starwars.movies || []} />;\n    }\n\n    renderErrors() {\n        if (!this.props.starwars.error) {\n            return null;\n        }\n\n        let message = '';\n        switch (this.props.starwars.error.toLowerCase()) {\n            case 'ajax error':\n                message = 'Error trying to connect to server';\n                break;\n            default:\n                message = this.props.starwars.error;\n                break;\n        }\n\n        return <Alert type=\"danger\">{message}</Alert>;\n    }\n\n    renderAlerts() {\n        const error = this.renderErrors();\n\n        if (error) {\n            return <div className=\"alert-group\">{error}</div>;\n        }\n\n        return null;\n    }\n\n    render() {\n        return (\n            <div className=\"page-wrap\">\n                <TopNav />\n                {this.renderAlerts()}\n                <div className=\"container mb-5 pb-4\">\n                    <div className=\"header-row clearfix\">\n                        <div className=\"group-filters\">\n                            {this.props.starwars.movies && this.props.starwars.movies.length !== 0 && (\n                                <Filters\n                                    movies={this.props.starwars.movies}\n                                    selectedMovie={this.props.preference.movie}\n                                    updateMovie={this.props.updateMovie}\n                                    updateGender={this.props.updateGender}\n                                    updateSort={this.props.updateSort}\n                                    fetchCharacters={this.props.fetchCharacters}\n                                />\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"body-row\">\n                        {this.props.starwars.processing && <Loader />}\n                        {!this.props.starwars.processing && this.renderMovie()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        preference: store.preference,\n        starwars: store.starwars\n    };\n};\n\nconst mapDispatchToProps = {\n    updateMovie,\n    updateGender,\n    updateSort,\n    fetchMovies,\n    fetchCharacters\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedContainer);\n","import { forkJoin } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport {\n    FETCH_CHARACTERS_FAILED,\n    FETCH_CHARACTERS_SUCCESS,\n    FETCH_MOVIES_FAILED,\n    FETCH_MOVIES_SUCCESS,\n    PROCESS_FETCH_CHARACTERS,\n    PROCESS_FETCH_MOVIES\n} from './types';\n\nconst BASE_URL = 'https://swapi.dev/api/films/';\n\nexport const fetchCharacters = (characters) => (dispatch) =>\n    new Promise(function (resolve, reject) {\n        dispatch({ type: PROCESS_FETCH_CHARACTERS });\n        const map = characters.reduce((o, key) => ({ ...o, [key]: ajax.getJSON(`${key}?format=json`) }), {});\n        forkJoin(map).subscribe(\n            (response) => {\n                dispatch({\n                    type: FETCH_CHARACTERS_SUCCESS,\n                    payload: {\n                        characters: response\n                    }\n                });\n                resolve();\n            },\n            (error) => {\n                dispatch({\n                    type: FETCH_CHARACTERS_FAILED,\n                    payload: error.message\n                });\n                reject();\n            }\n        );\n    });\n\nexport const fetchMovies = () => {\n    return (dispatch) => {\n        dispatch({ type: PROCESS_FETCH_MOVIES });\n\n        ajax.getJSON(`${BASE_URL}?format=json`).subscribe(\n            (response) => {\n                dispatch({\n                    type: FETCH_MOVIES_SUCCESS,\n                    payload: {\n                        movies: response.results\n                    }\n                });\n            },\n            (error) => {\n                dispatch({\n                    type: FETCH_MOVIES_FAILED,\n                    payload: error.message\n                });\n            }\n        );\n    };\n};\n","import { UPDATE_GENDER, UPDATE_MOVIE, UPDATE_SORT } from './types';\n\nconst initialState = {\n    movie: {},\n    gender: '',\n    sort: {}\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case UPDATE_MOVIE:\n            return {\n                ...state,\n                movie: action.payload\n            };\n        case UPDATE_GENDER:\n            return {\n                ...state,\n                gender: action.payload\n            };\n        case UPDATE_SORT:\n            return {\n                ...state,\n                sort: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    FETCH_CHARACTERS_FAILED,\n    FETCH_CHARACTERS_SUCCESS,\n    FETCH_MOVIES_FAILED,\n    FETCH_MOVIES_SUCCESS,\n    PROCESS_FETCH_CHARACTERS,\n    PROCESS_FETCH_MOVIES\n} from './types';\n\nexport const initialState = {\n    processing: false,\n    movies: [],\n    characters: {},\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case PROCESS_FETCH_MOVIES:\n            return {\n                ...state,\n                processing: true,\n                error: null\n            };\n        case FETCH_MOVIES_SUCCESS:\n            return {\n                ...state,\n                movies: [...action.payload.movies],\n                processing: false,\n                error: null\n            };\n        case PROCESS_FETCH_CHARACTERS:\n            return {\n                ...state,\n                processing: true,\n                error: null\n            };\n        case FETCH_CHARACTERS_SUCCESS:\n            return {\n                ...state,\n                characters: { ...state.characters, ...action.payload.characters },\n                processing: false,\n                error: null\n            };\n        case FETCH_MOVIES_FAILED:\n            return {\n                ...state,\n                processing: false,\n                error: action.payload\n            };\n        case FETCH_CHARACTERS_FAILED:\n            return {\n                ...state,\n                processing: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport preference from './preference/reducer';\nimport starwars from './starwars/reducer';\n\nexport default combineReducers({\n    starwars,\n    preference\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/rootReducer';\n\nconst persistedReducers = persistReducer(\n    {\n        key: 'starwars:root',\n        storage: storage\n    },\n    rootReducer\n);\n\nexport const store = createStore(persistedReducers, applyMiddleware(thunk));\nexport const persist = persistStore(store);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport Launcher from './components/launcher';\nimport FeedContainer from './containers/feed';\nimport { persist, store } from './store';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <PersistGate loading={<Launcher />} persistor={persist}>\n                    <FeedContainer />\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './app.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}